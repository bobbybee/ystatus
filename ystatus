#!/usr/bin/perl
use strict;
use warnings;
use POSIX qw/strftime/;
use Audio::MPD;

my $separator = " 〉";

# initialize the connection to MPD
my $mpd = Audio::MPD->new;

# compile status line

my $output = test() . battery() . $separator . datetime() . $separator . music();

# dump

$output =~ s/\n//g;
print $output, "\n";

# routines to extract information as necessary

sub battery {
    # read from /sys/class/power_supply/BAT0/ for information

    open my $status, '<', "/sys/class/power_supply/BAT0/status";
    open my $now, '<', "/sys/class/power_supply/BAT0/energy_now";
    open my $full, '<', "/sys/class/power_supply/BAT0/energy_full";

    my $power = "⏚";

    if($status eq "Charging\n") {
        $power = "⚡";
    }

    my $line = $power . " " . int(<$now> * 100 / <$full>) . "%";

    close $now;
    close $full;
    close $status;

    return $line;
}

sub datetime {
    return "⌚ " . strftime "%H:%M" . $separator . "%a %y-%m-%d", localtime;
}

sub music {
    if($mpd) {
        my $status = $mpd->status;

        if($status->state eq "play") {
            my $song = $mpd->current;

            if($song) {
                return "♪ " . $song->title;
            }
        }
    }

    return "♪ none" 
}

sub test {
    return "#[fg=red,bold]red#[default]";
}
